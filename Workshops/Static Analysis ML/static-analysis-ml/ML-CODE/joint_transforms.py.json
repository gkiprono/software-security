{
  "errors": [],
  "generated_at": "2021-10-26T03:48:16Z",
  "metrics": {
    "_totals": {
      "CONFIDENCE.HIGH": 30.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 30.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 450,
      "nosec": 0
    },
    "joint_transforms.py": {
      "CONFIDENCE.HIGH": 30.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 30.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 450,
      "nosec": 0
    }
  },
  "results": [
    {
      "code": "45     def __call__(self, img, mask):\n46         assert img.size == mask.size\n47         for t in self.transforms:\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 46,
      "line_range": [
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "75     def __call__(self, img, mask, centroid=None):\n76         assert img.size == mask.size\n77         w, h = img.size\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 76,
      "line_range": [
        76
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "109             max_y = h - th\n110             x1 = random.randint(c_x - tw, c_x)\n111             x1 = min(max_x, max(0, x1))\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 110,
      "line_range": [
        110
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "111             x1 = min(max_x, max(0, x1))\n112             y1 = random.randint(c_y - th, c_y)\n113             y1 = min(max_y, max(0, y1))\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 112,
      "line_range": [
        112
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "117             else:\n118                 x1 = random.randint(0, w - tw)\n119             if h == th:\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 118,
      "line_range": [
        118
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "121             else:\n122                 y1 = random.randint(0, h - th)\n123         return img.crop((x1, y1, x1 + tw, y1 + th)), mask.crop((x1, y1, x1 + tw, y1 + th))\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 122,
      "line_range": [
        122
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "145     def __call__(self, img, mask):\n146         assert img.size == mask.size\n147         w, h = img.size\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 146,
      "line_range": [
        146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "163         \n164         assert img.size == mask.size\n165         w, h = img.size\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 164,
      "line_range": [
        164
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "199     def __call__(self, img, mask):\n200         assert img.size == mask.size\n201         th, tw = self.size, self.size\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 200,
      "line_range": [
        200
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "219     def __call__(self, img, mask):\n220         if random.random() < 0.5:\n221             return img.transpose(Image.FLIP_LEFT_RIGHT), mask.transpose(\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 220,
      "line_range": [
        220
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "230     def __call__(self, img, mask):\n231         assert img.size == mask.size\n232         return img.resize(self.size, Image.BICUBIC), mask.resize(self.size, Image.NEAREST)\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 231,
      "line_range": [
        231
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "243     def __call__(self, img, mask):\n244         assert img.size == mask.size\n245         w, h = img.size\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 244,
      "line_range": [
        244
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "268     def __call__(self, img, mask):\n269         assert img.size == mask.size\n270         w, h = img.size\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 269,
      "line_range": [
        269
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "293     def __call__(self, img, mask):\n294         assert img.size == mask.size\n295         w, h = img.size\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 294,
      "line_range": [
        294
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "306     def __call__(self, img, mask):\n307         assert img.size == mask.size\n308         for attempt in range(10):\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 307,
      "line_range": [
        307
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "309             area = img.size[0] * img.size[1]\n310             target_area = random.uniform(0.45, 1.0) * area\n311             aspect_ratio = random.uniform(0.5, 2)\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 310,
      "line_range": [
        310
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "310             target_area = random.uniform(0.45, 1.0) * area\n311             aspect_ratio = random.uniform(0.5, 2)\n312 \n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 311,
      "line_range": [
        311
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "315 \n316             if random.random() < 0.5:\n317                 w, h = h, w\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 316,
      "line_range": [
        316
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "319             if w <= img.size[0] and h <= img.size[1]:\n320                 x1 = random.randint(0, img.size[0] - w)\n321                 y1 = random.randint(0, img.size[1] - h)\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 320,
      "line_range": [
        320
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "320                 x1 = random.randint(0, img.size[0] - w)\n321                 y1 = random.randint(0, img.size[1] - h)\n322 \n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 321,
      "line_range": [
        321
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "324                 mask = mask.crop((x1, y1, x1 + w, y1 + h))\n325                 assert (img.size == (w, h))\n326 \n327                 return img.resize((self.size, self.size), Image.BICUBIC),\\\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 325,
      "line_range": [
        325,
        326
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "340     def __call__(self, img, mask):\n341         rotate_degree = random.random() * 2 * self.degree - self.degree\n342         return img.rotate(rotate_degree, Image.BICUBIC), mask.rotate(\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 341,
      "line_range": [
        341
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "355     def __call__(self, img, mask, centroid=None):\n356         assert img.size == mask.size\n357 \n358         # first, resize such that shorter edge is pre_size\n359         if self.pre_size is None:\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 356,
      "line_range": [
        356,
        357,
        358
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "364             scale_amt = self.pre_size / img.size[0]\n365         scale_amt *= random.uniform(self.scale_min, self.scale_max)\n366         w, h = [int(i * scale_amt) for i in img.size]\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 365,
      "line_range": [
        365
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "391     def __call__(self, img, mask):\n392         assert img.size == mask.size\n393 \n394         w, h = img.size\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 392,
      "line_range": [
        392,
        393
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "443     def __call__(self, img, mask):\n444         assert img.size == mask.size\n445 \n446         w, h = img.size\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 444,
      "line_range": [
        444,
        445
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "542         \"\"\"\n543         assert img.size == mask.size\n544 \n545         scale_amt = random.uniform(self.scale_min, self.scale_max)\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 543,
      "line_range": [
        543,
        544
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "544 \n545         scale_amt = random.uniform(self.scale_min, self.scale_max)\n546         w = int(scale_amt * img.size[0])\n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 545,
      "line_range": [
        545
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "599                 window_size = window_size * ratio[0]\n600                 cropx = random.uniform(\n601                     max(0, (x - window_size / 2) - (self.size - window_size)),\n602                     max((x - window_size / 2), (x - window_size / 2) - (\n603                         (w - window_size) - x + window_size / 2)))\n604 \n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 600,
      "line_range": [
        600,
        601,
        602,
        603
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "604 \n605                 cropy = random.uniform(\n606                     max(0, (y - window_size / 2) - (self.size - window_size)),\n607                     max((y - window_size / 2), (y - window_size / 2) - (\n608                         (h - window_size) - y + window_size / 2)))\n609 \n",
      "filename": "joint_transforms.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 605,
      "line_range": [
        605,
        606,
        607,
        608
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    }
  ]
}